i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
#
# ggplot(aes(x = prov_abb, y = n)) +
# geom_bar(stat = 'identity') +
# xlab('Province)') +
# ylab('Number of Health Facilities listed')
}
plotting_tb %>%
ggplot(aes(x = prov_abb, y = n)) +
geom_bar(stat = 'identity') +
xlab('Province)') +
ylab('Number of Health Facilities listed')
View(plotting_tb)
plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
View(plotting_tb)
plotting_tb %>% plotting_tb %>%
ggplot(aes(x = prov_abb, y = n)) +
geom_bar(stat = 'identity') +
xlab('Province)') +
ylab('Number of Health Facilities listed')
plotting_tb <-  plotting_tb %>%
ggplot(aes(x = prov_abb, y = n)) +
geom_bar(stat = 'identity') +
xlab('Province)') +
ylab('Number of Health Facilities listed')
plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
for (each_tb in list_tibbles){
print(names(list_tibbles)[i])
tally_tb <- each_tb %>%
group_by(prov_abb) %>%
tally(name = names(list_tibbles)[i])
i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
}
# Create a named list to iterate through tibbles
list_tibbles <- list(hosp_bed_tb, dhb_2016_tb, dhb_2018_tb, doh_dd_tb, kemri_who_tb)
names(list_tibbles) <- c("hosp_bed_tb", "dhb_2016_tb", "dhb_2018_tb", "doh_dd_tb", "kemri_who_tb")
# Create new tibble to gather data from each dataset
plotting_rows <- c("EC", "GP", "FS", "KZ", "LP", "MP", "NC", "NW", "WC")
plotting_tb <- tibble(prov_abb = plotting_rows)
i = 1
for (each_tb in list_tibbles){
print(names(list_tibbles)[i])
tally_tb <- each_tb %>%
group_by(prov_abb) %>%
tally(name = names(list_tibbles)[i])
i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
}
plotting_tb <- plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
View(plotting_tb)
plotting_tb <-  plotting_tb %>%
ggplot(aes(x = prov_abb, y = count)) +
geom_bar(stat = 'identity') +
xlab('Province)') +
ylab('Number of Health Facilities listed')
plotting_rows <- c("EC", "GP", "FS", "KZ", "LP", "MP", "NC", "NW", "WC")
plotting_tb <- tibble(prov_abb = plotting_rows)
i = 1
for (each_tb in list_tibbles){
tally_tb <- each_tb %>%
group_by(prov_abb) %>%
tally(name = names(list_tibbles)[i])
i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
}
plotting_tb <- plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count)) +
geom_bar(stat = 'identity') +
xlab('Province)') +
ylab('Number of Health Facilities listed')
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity') +
xlab('Province)') +
ylab('Number of Health Facilities listed')
# Create a named list to iterate through tibbles
list_tibbles <- list(hosp_bed_tb, dhb_2016_tb, dhb_2018_tb, doh_dd_tb, kemri_who_tb)
names(list_tibbles) <- c("hosp_bed_tb", "dhb_2016_tb", "dhb_2018_tb", "doh_dd_tb", "kemri_who_tb")
# Create new tibble to gather data from each dataset
plotting_rows <- c("EC", "GP", "FS", "KZ", "LP", "MP", "NC", "NW", "WC")
plotting_tb <- tibble(prov_abb = plotting_rows)
i = 1
for (each_tb in list_tibbles){
tally_tb <- each_tb %>%
group_by(prov_abb) %>%
tally(name = names(list_tibbles)[i])
i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
}
plotting_tb <- plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source", labels = c("A, B, C")) +
# Create a named list to iterate through tibbles
list_tibbles <- list(hosp_bed_tb, dhb_2016_tb, dhb_2018_tb, doh_dd_tb, kemri_who_tb)
names(list_tibbles) <- c("hosp_bed_tb", "dhb_2016_tb", "dhb_2018_tb", "doh_dd_tb", "kemri_who_tb")
# Create new tibble to gather data from each dataset
plotting_rows <- c("EC", "GP", "FS", "KZ", "LP", "MP", "NC", "NW", "WC")
plotting_tb <- tibble(prov_abb = plotting_rows)
i = 1
for (each_tb in list_tibbles){
tally_tb <- each_tb %>%
group_by(prov_abb) %>%
tally(name = names(list_tibbles)[i])
i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
}
plotting_tb <- plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source", labels = c("A, B, C"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8), labels = c("A", "B")) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source")
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_discrete(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_brewer(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_identity(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_ordinal(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_discrete(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
tidy_data_sources_tb <- tibble(Source = c("Hospital Bed",
"DoH Health Barometer 2016/2017",
"HST Health Barometer 2018/2019",
"DoH Data Dictionary",
"Healthsites.io",
"KEMRI/WHO"),
`Number of facilities` = c(dim(hosp_bed_tb)[1],
dim(dhb_2016_tb)[1],
dim(dhb_2018_tb)[1],
dim(doh_dd_tb)[1],
# Healthsites not yet available
NA,
dim(kemri_who_tb)[1]),
`Facility types` = c(levels(as_factor(hosp_bed_tb$type)),
levels(as_factor(dhb_2016_tb$type)),
levels(as_factor(dhb_2018_tb$type)),
levels(as_factor(doh_dd_tb$type)),
NA,
levels(as_factor(kemri_who_tb$type)),),
Variables = c(str_c(colnames(hosp_bed_tb), collapse = ", "),
str_c(colnames(dhb_2016_tb), collapse = ", "),
str_c(colnames(dhb_2018_tb), collapse = ", "),
str_c(colnames(doh_dd_tb), collapse = ", "),
# Healthsite data not yet available
NA,
str_c(colnames(kemri_who_tb), collapse = ", ")),
`Admin levels included` = c("2, 3",
"2, 3",
"2, 3, 4",
"2, 3, 4",
NA,
"2")
)
levels(as_factor(hosp_bed_tb$type))
remove(each_tb, i)
# Create a named list to iterate through tibbles
list_tibbles <- list(hosp_bed_tb, dhb_2016_tb, dhb_2018_tb, doh_dd_tb, kemri_who_tb)
names(list_tibbles) <- c("hosp_bed_tb", "dhb_2016_tb", "dhb_2018_tb", "doh_dd_tb", "kemri_who_tb")
# Create new tibble to gather data from each dataset
plotting_rows <- c("EC", "GP", "FS", "KZ", "LP", "MP", "NC", "NW", "WC")
plotting_tb <- tibble(prov_abb = plotting_rows)
i = 1
for (each_tb in list_tibbles){
tally_tb <- each_tb %>%
group_by(prov_abb) %>%
tally(name = names(list_tibbles)[i])
i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
}
plotting_tb <- plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.8)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_discrete(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
remove(list_tibbles, plotting_rows, plotting_tb, each_tb, i, tally_tb)
c(levels(as_factor(hosp_bed_tb$type)),
levels(as_factor(dhb_2016_tb$type)),
levels(as_factor(dhb_2018_tb$type)),
levels(as_factor(doh_dd_tb$type)),
NA,
levels(as_factor(kemri_who_tb$type)),)
c(levels(as_factor(hosp_bed_tb$type)),
levels(as_factor(dhb_2016_tb$type))
tidy_data_sources_tb <- tibble(Source = c("Hospital Bed",
tidy_data_sources_tb <- tibble(Source = c("Hospital Bed",
"DoH Health Barometer 2016/2017",
"HST Health Barometer 2018/2019",
"DoH Data Dictionary",
"Healthsites.io",
"KEMRI/WHO"),
`Number of facilities` = c(dim(hosp_bed_tb)[1],
dim(dhb_2016_tb)[1],
dim(dhb_2018_tb)[1],
dim(doh_dd_tb)[1],
# Healthsites not yet available
NA,
dim(kemri_who_tb)[1]),
`Facility types` = c(levels(as_factor(hosp_bed_tb$type)),
levels(as_factor(dhb_2016_tb$type)),
levels(as_factor(dhb_2018_tb$type)),
levels(as_factor(doh_dd_tb$type)),
NA,
levels(as_factor(kemri_who_tb$type))),
Variables = c(str_c(colnames(hosp_bed_tb), collapse = ", "),
str_c(colnames(dhb_2016_tb), collapse = ", "),
str_c(colnames(dhb_2018_tb), collapse = ", "),
str_c(colnames(doh_dd_tb), collapse = ", "),
# Healthsite data not yet available
NA,
str_c(colnames(kemri_who_tb), collapse = ", ")),
`Admin levels included` = c("2, 3",
"2, 3",
"2, 3, 4",
"2, 3, 4",
NA,
"2")
)
tidy_data_sources_tb <- tibble(Source = c("Hospital Bed",
"DoH Health Barometer 2016/2017",
"HST Health Barometer 2018/2019",
"DoH Data Dictionary",
"Healthsites.io",
"KEMRI/WHO"),
`Number of facilities` = c(dim(hosp_bed_tb)[1],
dim(dhb_2016_tb)[1],
dim(dhb_2018_tb)[1],
dim(doh_dd_tb)[1],
# Healthsites not yet available
NA,
dim(kemri_who_tb)[1]),
`Facility types` = c(str_c(levels(as_factor(hosp_bed_tb$type))),
str_c(levels(as_factor(dhb_2016_tb$type))),
str_c(levels(as_factor(dhb_2018_tb$type))),
str_c(levels(as_factor(doh_dd_tb$type))),
NA,
str_c(levels(as_factor(kemri_who_tb$type)))),
Variables = c(str_c(colnames(hosp_bed_tb), collapse = ", "),
str_c(colnames(dhb_2016_tb), collapse = ", "),
str_c(colnames(dhb_2018_tb), collapse = ", "),
str_c(colnames(doh_dd_tb), collapse = ", "),
# Healthsite data not yet available
NA,
str_c(colnames(kemri_who_tb), collapse = ", ")),
`Admin levels included` = c("2, 3",
"2, 3",
"2, 3, 4",
"2, 3, 4",
NA,
"2")
)
str_c(levels(as_factor(hosp_bed_tb$type))
tidy_data_sources_tb <- tibble(Source = c("Hospital Bed",
tidy_data_sources_tb <- tibble(Source = c("Hospital Bed",
"DoH Health Barometer 2016/2017",
"HST Health Barometer 2018/2019",
"DoH Data Dictionary",
"Healthsites.io",
"KEMRI/WHO"),
`Number of facilities` = c(dim(hosp_bed_tb)[1],
dim(dhb_2016_tb)[1],
dim(dhb_2018_tb)[1],
dim(doh_dd_tb)[1],
# Healthsites not yet available
NA,
dim(kemri_who_tb)[1]),
`Facility types` = c(str_c(levels(as_factor(hosp_bed_tb$type)), collapse = ", "),
str_c(levels(as_factor(dhb_2016_tb$type)), collapse = ", "),
str_c(levels(as_factor(dhb_2018_tb$type)), collapse = ", "),
str_c(levels(as_factor(doh_dd_tb$type)), collapse = ", "),
NA,
str_c(levels(as_factor(kemri_who_tb$type)), collapse = ", ")),
Variables = c(str_c(colnames(hosp_bed_tb), collapse = ", "),
str_c(colnames(dhb_2016_tb), collapse = ", "),
str_c(colnames(dhb_2018_tb), collapse = ", "),
str_c(colnames(doh_dd_tb), collapse = ", "),
# Healthsite data not yet available
NA,
str_c(colnames(kemri_who_tb), collapse = ", ")),
`Admin levels included` = c("2, 3",
"2, 3",
"2, 3, 4",
"2, 3, 4",
NA,
"2")
)
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 1)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_discrete(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 1)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_discrete(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
# Create a named list to iterate through tibbles
list_tibbles <- list(hosp_bed_tb, dhb_2016_tb, dhb_2018_tb, doh_dd_tb, kemri_who_tb)
names(list_tibbles) <- c("hosp_bed_tb", "dhb_2016_tb", "dhb_2018_tb", "doh_dd_tb", "kemri_who_tb")
# Create new tibble to gather data from each dataset
plotting_rows <- c("EC", "GP", "FS", "KZ", "LP", "MP", "NC", "NW", "WC")
plotting_tb <- tibble(prov_abb = plotting_rows)
i = 1
for (each_tb in list_tibbles){
tally_tb <- each_tb %>%
group_by(prov_abb) %>%
tally(name = names(list_tibbles)[i])
i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
}
plotting_tb <- plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 1)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_discrete(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
remove(list_tibbles, plotting_rows, each_tb, i, tally_tb)
# Create a named list to iterate through tibbles
list_tibbles <- list(hosp_bed_tb, dhb_2016_tb, dhb_2018_tb, doh_dd_tb, kemri_who_tb)
names(list_tibbles) <- c("hosp_bed_tb", "dhb_2016_tb", "dhb_2018_tb", "doh_dd_tb", "kemri_who_tb")
# Create new tibble to gather data from each dataset
plotting_rows <- c("EC", "GP", "FS", "KZ", "LP", "MP", "NC", "NW", "WC")
plotting_tb <- tibble(prov_abb = plotting_rows)
i = 1
for (each_tb in list_tibbles){
tally_tb <- each_tb %>%
group_by(prov_abb) %>%
tally(name = names(list_tibbles)[i])
i <- i+ 1
plotting_tb <- plotting_tb %>%
merge(tally_tb, by = "prov_abb", all.x = TRUE)
}
plotting_tb <- plotting_tb %>% pivot_longer(cols = -prov_abb,
names_to = "dataset",
values_to = "count")
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.7)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_discrete(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
remove(list_tibbles, plotting_rows, each_tb, i, tally_tb)
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.7)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_brewer(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.7)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_binned(labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.7)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_brewer(type = "div", labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.7)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_brewer(type = "seq", labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
plotting_tb %>%
ggplot(aes(x = prov_abb, y = count, fill = dataset)) +
geom_bar(stat = 'identity', position=position_dodge(width = 0.7)) +
xlab('Province') +
ylab('Number of health facilities per dataset') +
labs(fill = "Data Source") +
scale_fill_brewer(type = "qual", labels = c("Hospital Beds Data",
"DoH District Health Barometer 2016/2017",
"HST District Health Barometer 2018/2019",
"DoH Data Dictionary",
"KEMRI/WHO"))
write_csv(hosp_bed_tb, "data/tidy_data/hosp_bed_clean.csv")
